@model EZY.RMAS.Contract.JobFormHeader
    @{
        ViewBag.Title = "CreateJob";

}

<section class="content">
    @using (Html.BeginForm("CreateJob", "Services", FormMethod.Post, new { id = "frm", name = "frm" }))
    {

        <div class="box box-default">
            <div class="box-header with-border">
                <div class="row">
                    <section class="content-header">
                        <ol class="breadcrumb">
                            <li><a href='@Url.Content("~/Home/Index")'><i class="fa fa-dashboard"></i> Home</a></li>
                            <li><a href='@Url.Content("~/Home/Services")'>Services</a></li>
                            <li><a href='@Url.Content("~/Services/CreateJob")'>Create Job</a></li>
                        </ol>
                    </section>
                </div>
            </div>
            <div class="box-body">
                <fieldset class="form-horizontal">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                          
                            <div class="col-md-2">
                                @Html.Label("Serial Number", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-3 pull-left">
                                @Html.TextBoxFor(x => x.SerialNo, new { @class = "form-control input-sm " })
                            </div>
                            <div class="col-md-2">
                                @Html.HiddenFor(x=>x.JobID)
                                @Html.Label("JobId", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.JobID, new { @class = "form-control input-sm" ,disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                           
                            <div class="col-md-2">
                                @Html.Label("Customer Name", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-3 pull-left">
                                @*@Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control input-sm", placeholder = "Customer Name" })
                                @Html.HiddenFor(x=>x.CustomerCode)*@
                                @Html.DropDownListFor(m => m.CustomerCode, Model.CustomerList, "SELECT CUSTOMER", new { @class = "form-control input-sm" })
                               
                            </div>
                            <div class="col-md-2">
                                @*@Html.HiddenFor(x=>x.SerialNo)*@
                                @Html.Label("Date Receive", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.DateReceived, new { @class = "form-control input-sm datepicker" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                            <div class="col-md-2">
                                @Html.Label("Address", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(x => x.Address1, new { @class = "form-control input-sm", placeholder = "Address" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Date Return", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.DateReturn, new { @class = "form-control input-sm datepicker" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                            <div class="col-md-2">
                                @Html.Label("Phone", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control input-sm", placeholder = "Phone" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Assign Engineer", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.AssignedEngineer, Model.EngineerList, "SELECT ENGINEER", new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                            <div class="col-md-2">
                                @Html.Label("Email", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(x => x.EmailID, new { @class = "form-control input-sm", placeholder = "Email" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Product category", new { @class = "control-label input-sm" })
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.ProductCategory, Model.ProductCategoryList, "SELECT CATEGORY", new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">

                            </div>
                            <div class="col-md-2">
                                @Html.Label("Purchased Date", new { @class = "control-label input-sm " })

                            </div>
                            <div class="col-md-1">
                                @Html.TextBoxFor(x => x.PurchaseDate, new { @class = "form-control input-sm datepicker" })

                            </div>
                            <div class="col-md-1">
                                @Html.Label("Invoice No:", new { @class = "control-label input-sm pull-right" })
                            </div>
                            <div class="col-md-1">
                                @Html.TextBoxFor(x => x.InvoiceNo, new { @class = "form-control input-sm", placeholder = "Invoice No" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Service Type", new { @class = "control-label input-sm" })
                               @Html.HiddenFor(x=>x.DocumentNo)
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.ServiceType, Model.ServiceTypeList, "SELECT SERVICE TYPE", new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-sm btn-default pull-right" onclick="Add()">Add</button>
                        </div>

                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col-md-12">
                            <table class="table table-striped" id="tblCustomerInvoices">
                                <thead>
                                    <tr>
                                        <th>Item</th>
                                        <th>Product Description</th>
                                        <th>Model #</th>
                                        <th>Serial #</th>
                                        <th>Remarks</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.JobFormDetails != null &&  Model.JobFormDetails.Count > 0)
    {
                                for (var i = 0; i < Model.JobFormDetails.Count(); i++)
{
                                <tr id="tr_@i" class="tr">
                                    <td>
                                        @(i+1)
                                     </td>
                                    <td>
                                        @Html.HiddenFor(x => x.JobFormDetails[i].ItemID)
                                        @Html.TextBoxFor(x => x.JobFormDetails[i].ProductDescription, new
        {
            @class = "form-control input-sm",
            required = "required",
            style = "width:200px;",

        })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.JobFormDetails[i].ModelNo, new
        {
            @class = "form-control input-sm",
            required = "required",
            style = "width:200px;",

        })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.JobFormDetails[i].SerialNo, new
        {
            @class = "form-control input-sm",
            required = "required",
            style = "width:200px;",

        })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.JobFormDetails[i].Remarks, new
        {
            @class = "form-control input-sm",
            required = "required",
            style = "width:200px;",

        })
                                    </td>
                                    <td><button id="button" class="btn btn-sm btn-danger pull-right" type="button" onclick="DeleteRecord(this,@i)">Delete</button></td>

                                </tr>
}
}


                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="pull-right">
                                <button class="btn btn-sm btn-primary" onclick="SaveJobForm()">Save</button>
                                @if (Model.JobID != 0)
    {
                            <button class="btn btn-sm btn-danger" type="button" onclick="location.href='@Url.Content("~/Services/DeleteJobForm?JobID=" + Model.JobID)'">Delete</button>
}

                            </div>

                        </div>

                    </div>

                </fieldset>
            </div>


        </div>
    }


</section>
<script src="@Url.Content("~/Scripts/moment.js")"></script>
<script src="@Url.Content("~/Scripts/bootstrap-datetimepicker.js")"></script>
<script src="@Url.Content("~/Scripts/select2.min.js")"></script>
<script type="text/javascript">
    $(function(){
        $('.datepicker').datetimepicker({
        useCurrent: false,
        format: 'DD/MM/YYYY',
        inline: false
        });
        $('#frm').validate({
            rules: {
                CustomerCode: {
                    required: true
                },
                SerialNo:{
                    required: true
                },
                'JobFormDetails.ProductDescription': {
                    required: true
                },
                'JobFormDetails.SerialNo': {
                    required: true
                },
                'JobFormDetails.Remarks': {
                    required: true
                },
                'JobFormDetails.ModelNo': {
                    required: true
                }
            }

        });
        
    });
    
   
    function DeleteRecord(e, i) {
        debugger;
        if ($('#frm').valid()) {
            $('#tr_'+i).remove();
        }
    }
   

    function Add() {
        if ($('#frm').valid()) {
            $('#frm').submit();
        }
    }
    function SaveJobForm() {
        if ($('#frm').valid()) {
            $('#frm').attr('action', '@Url.Content("~/Services/JobFormSave")');
            $('#frm').submit();
        }
    }
    //function customercode(el) {
    //    $('#CustomerCode').value = el.value;
    //}

 </script>