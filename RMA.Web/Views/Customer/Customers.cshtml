@model List<EZY.RMAS.Contract.Customer>
@{
    ViewBag.Title = "Customers";
}
@section seccss{
    <link href="@Url.Content("~/Css/dataTables.bootstrap.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Css/dataTables.responsive.css")" rel="stylesheet" />
}
<section class="content">
    <div class="box box-default">
        <div class="box-header with-border">
            <div class="row">
                <section class="content-header">
                    <ol class="breadcrumb">
                        <li><a href='@Url.Content("~/Home/Index")'><i class="fa fa-dashboard"></i> Home</a></li>
                        @*<li><a href='@Url.Content("~/Home/Index")'>Modules</a></li>*@
                        <li><a href='@Url.Content("~/Home/Masters")'> Master Data</a></li>
                        <li class="active"><i class="fa fa-users" aria-hidden="true"></i>&nbsp;Contact Database</li>
                    </ol>
                </section>
            </div>
            <div class="box-tools">
                @if (UTILITY.HasRight("CustomerAdd"))
                {
                    @Html.EncodedActionLink("<i class='fa fa-plus' aria-hidden='true'></i>&nbsp;New Contact",
                    "Customer", "Customer",
                    new { customerCode = "" }, new { @class = "btn btn-default btn-sm" });
                }
            </div>
        </div>
        <div class="box-body">
            <div class="row" style="margin-top:10px;">
                <div class="col-md-12">
                    <table class="table table-striped" id="tblCustomers">
                        <thead>
                            <tr>
                                <th>Contact Type</th>
                                <th>Customer Code</th>
                                <th>Customer Name</th>
                                <th>Status</th>
                                <th>#Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Count; i++)
                            {
                                <tr>
                                    <td>@Model[i].CustomerTypeDescription</td>
                                    <td>@Model[i].CustomerCode</td>
                                    <td>@Model[i].CustomerName</td>
                                    <td>
                                        @if (Model[i].Status)
                                        {
                                            <span class="badge bg-green">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-red">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        @if (UTILITY.HasRight("CustomerSave"))
                                        {
                                            @Html.EncodedActionLink("<i class='fa fa-pencil-square-o' aria-hidden='true'></i>&nbsp;Edit",
                                            "Customer", "Customer",
                                            new { customerCode = Model[i].CustomerCode }, new { @class = "btn btn-primary btn-sm" })
                                        }
                                        @if (UTILITY.HasRight("CustomerDelete"))
                                        {
                                            <button id="btnDel" class="btn btn-danger btn-sm" type="button" onclick="DeleteCustomer('@Model[i].CustomerName', '@Model[i].CustomerCode')"><i class="fa fa-trash-o"></i>&nbsp;Delete</button>
                                        }

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <div class="row">
                <div class="col-md-12">
                    <button class="btn btn-default btn-sm pull-right" type="button" onclick="location.href = '@Url.Content("~/Home/Masters")'"><i class="fa fa-backward"></i>&nbsp;Back</button>
                </div>

            </div>
        </div>
    </div>
</section>
@using (Html.BeginForm("DeleteCustomer", "Customer", FormMethod.Post, new { id = "frmDeleteCustomer", name = "frmDeleteCustomer" }))
{
    @Html.Hidden("CustomerCode")
}
@section secscripts{
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.bootstrap.js")"></script>
    <script type="text/javascript">
        $(function () {

            var isDefaultCol = false;
            var isDefaultDir = false;
            var obj = {};
            var oTable = $('#tblCustomers').dataTable({
                "bStateSave": true,
                "sPaginationType": "full_numbers",
                "bServerSide": true,
                "bProcessing": true,
                "bSortClasses": false,
                "bDeferRender": true,
                "sAjaxSource": '@Url.Content("~/Customer/GetCustomers")',
                "bFilter": false,
                "aaSorting": [[0, "asc"]],
                "aoColumnDefs": [{
                    bSortable: false,
                    aTargets: [-1]
                }
                ],
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var sortColArr = ['CustomerTypeDescription', 'CustomerName', 'Status', 'Action'];
                    var paramData = {};
                    var sExt = "?";
                    var sAnd = "";
                    var r = 0;

                    for (var key in aoData) {
                        paramData[aoData[key]['name']] = aoData[key]['value'];

                        if (r > 0) sAnd = "&";
                        if (aoData[key]['name'].trim() == "iSortCol_0") {
                            sExt += sAnd + "sort_col=" + aoData[key]['value']; r++
                            obj.sortColumn = sortColArr[aoData[key]['value']];
                        }
                        if (aoData[key]['name'].trim() == "iDisplayLength") {
                            sExt += sAnd + "limit=" + aoData[key]['value']; r++
                            obj.limit = aoData[key]['value'];
                        }
                        if (aoData[key]['name'].trim() == "iDisplayStart") {
                            sExt += sAnd + "offset=" + aoData[key]['value']; r++
                            obj.offset = aoData[key]['value'];
                        }
                        if (aoData[key]['name'].trim() == "iSortCol_0") {
                            sExt += sAnd + "sort_col=" + aoData[key]['value']; r++
                            obj.sortColumn = sortColArr[aoData[key]['value']];
                        }
                        if (aoData[key]['name'].trim() == "sSortDir_0") {
                            sExt += sAnd + "sort=" + aoData[key]['value']; r++
                            obj.sortType = aoData[key]['value'].toUpperCase();
                        }
                        if (aoData[key]['name'].trim() == "sEcho") var sEcho = aoData[key]['value'];
                    }

                    oSettings.jqXHR = $.ajax({
                        "type": "POST",
                        "contentType": "application/json;charset=utf-8",
                        "accept": "application/json",
                        "dataType": "json",
                        "url": sSource,
                        cache: false,
                        "data": JSON.stringify(obj),
                        "success": function (result) {

                            var tempdset = {};
                            var dataSet = [];
                            for (var key in result['customers']) {

                                var objinner = [];
                                objinner.push(result['customers'][key]['CustomerTypeDescription']);
                                objinner.push(result['customers'][key]['CustomerCode']);
                                objinner.push(result['customers'][key]['CustomerName']);

                                if (result['customers'][key]['Status'])
                                    objinner.push('<span class="badge bg-green">Active</span>');
                                else
                                    objinner.push('<span class="badge bg-red">Inactive</span>');

                                var htmlAction = '';
                                @if(UTILITY.HasRight("CustomerEdit"))
                                {
                                    <text>htmlAction += '<a class="btn btn-primary btn-sm" href="' + '@Url.Content("~/Customer/Customer")' + '?q=' + result['customers'][key]['EncryptStr'] + '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>&nbsp;Edit</a>&nbsp;';</text>
                                }
                                else
                                {
                                    <text>htmlAction += '<button class="btn btn-primary btn-sm" disabled="disabled"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>&nbsp;Edit</button>&nbsp;';</text>
                                }
                                if (result['customers'][key]['Status']) {

                                    @if(UTILITY.HasRight("CustomerDelete"))
                                    {

                                    <text>htmlAction += '<button id="btnDel" class="btn btn-danger btn-sm" type="button" onclick="DeleteCustomer(\'' + result['customers'][key]['CustomerName'] + '\', \'' + result['customers'][key]['CustomerCode'] + '\')"><i class="fa fa-trash-o"></i>&nbsp;Delete</button>';</text>

                                    }
                                    else
                                    {
                                    <text>htmlAction += '<button class="btn btn-danger btn-sm" type="button" disabled="disabled"><i class="fa fa-trash-o"></i>&nbsp;Delete</button>';</text>
                                }
                                }
                                else {
                                    htmlAction += '<button id="btnDel" disabled="disabled" class="btn btn-danger btn-sm" type="button" onclick="DeleteCustomer(\'' + result['customers'][key]['CustomerName'] + '\', \'' + result['customers'][key]['CustomerCode'] + '\')"><i class="fa fa-trash-o"></i>&nbsp;Delete</button>';
                                }


                                objinner.push(htmlAction);
                                dataSet.push(objinner);
                            }

                            tempdset['sEcho'] = sEcho;
                            tempdset['iTotalRecords'] = result['totalRecords'];
                            tempdset['iTotalDisplayRecords'] = result['totalRecords'];
                            tempdset['aaData'] = dataSet;
                            fnCallback(tempdset);
                        }
                    });
                }
            });
        });
        function AddCustomer() {
            location.href = '@Url.Content("~/Customers/Customer")';
        }

        function DeleteCustomer(customerName, customerCode) {
            var r = confirm('Are you sure do you want to delete ' + customerName);
            if (r) {
                $('#CustomerCode').val(customerCode);
                $('#frmDeleteCustomer').submit();
            }
        };
    </script>
}

